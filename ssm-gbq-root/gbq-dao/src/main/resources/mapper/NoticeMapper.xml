<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.gbq.mapper.NoticeMapper">
  <resultMap id="BaseResultMap" type="com.ssm.gbq.model.Notice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="notice" jdbcType="VARCHAR" property="notice" />
    <result column="managerId" jdbcType="INTEGER" property="managerId" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createTime" />
    <result column="state" jdbcType="SMALLINT" property="state" />
    <result column="rose" jdbcType="SMALLINT" property="rose" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, notice, managerId, createTime, state,rose
  </sql>
  <select id="selectByExample" parameterType="com.ssm.gbq.model.NoticeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_notice
    where id = #{id,jdbcType=INTEGER}
  </select>
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    	delete from t_notice
    	where id in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
  <delete id="deleteByExample" parameterType="com.ssm.gbq.model.NoticeExample">
    delete from t_notice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.gbq.model.Notice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice (notice, managerId, createTime, 
      state)
    values (#{notice,jdbcType=VARCHAR}, #{managerId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{state,jdbcType=SMALLINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.gbq.model.Notice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_notice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="notice != null">
        notice,
      </if>
      <if test="managerId != null">
        managerId,
      </if>
      <if test="createTime != null">
        createTime,
      </if>
      <if test="state != null">
        state,
      </if>
       <if test="rose != null">
        rose,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="notice != null">
        #{notice,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        #{managerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        #{state,jdbcType=SMALLINT},
      </if>
       <if test="rose != null">
        #{rose,jdbcType=SMALLINT},
      </if>
    </trim>
  </insert>
 <select id="countByExample"  resultType="int">
    select count(*) from t_notice
    <if test="_parameter != null">
      <include refid="Query_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_notice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.notice != null">
        notice = #{record.notice,jdbcType=VARCHAR},
      </if>
      <if test="record.managerId != null">
        managerId = #{record.managerId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        createTime = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=SMALLINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_notice
    set id = #{record.id,jdbcType=INTEGER},
      notice = #{record.notice,jdbcType=VARCHAR},
      managerId = #{record.managerId,jdbcType=INTEGER},
      createTime = #{record.createTime,jdbcType=TIMESTAMP},
      state = #{record.state,jdbcType=SMALLINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.gbq.model.Notice">
    update t_notice
    <set>
      <if test="notice != null">
        notice = #{notice,jdbcType=VARCHAR},
      </if>
      <if test="managerId != null">
        managerId = #{managerId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        createTime = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=SMALLINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.gbq.model.Notice">
    update t_notice
    set notice = #{notice,jdbcType=VARCHAR},
      managerId = #{managerId,jdbcType=INTEGER},
      createTime = #{createTime,jdbcType=TIMESTAMP},
      state = #{state,jdbcType=SMALLINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> ,
        (select m.name from t_manager m where m.id = t_notice.managerId) as name
        from t_notice
        <if test="_parameter != null">
            <include refid="Query_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null and example.orderByClause != ''">
             order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
  </select>
    <sql id="Query_By_Example_Where_Clause" >
       <trim prefix="WHERE"  prefixOverrides="AND|OR" >
            <if test="example.name != null and example.name != ''">
            or managerId in(SELECT `id` from t_manager m where m.name like CONCAT('%','${example.name}','%'))
            </if>
            <if test="example.startTime != null and example.startTime != '' ">
              AND createTime &gt;= #{example.startTime}
            </if>
            <if test="example.endTime != null and example.endTime != '' ">
              AND createTime &lt;= DATE_ADD(#{example.endTime},INTERVAL 1 DAY)
            </if>
             <if test="example.state != null and example.state != '' ">
              AND state = #{example.state}
            </if>
             <if test="example.state == null  ">
              AND state in (0,1)
            </if>
       </trim>
  </sql>
  
   <insert id="addNoticeItem" parameterType="com.ssm.gbq.model.Notice">
	    insert into t_notice (notice, createTime,state,rose,managerId)
	    values
	    <foreach collection="list" item="item" separator=",">
	    	(#{item.notice,jdbcType=VARCHAR},#{item.createTime,jdbcType=TIMESTAMP},
	    	#{item.state,jdbcType=INTEGER},#{item.rose,jdbcType=INTEGER},#{item.managerId,jdbcType=INTEGER})
	    </foreach>
	</insert>
	
	<select id="statisticAllNotice" resultType="com.ssm.gbq.model.vo.NoticeDto">
		select notice,DATE_FORMAT(createTime,'%Y-%m-%d')as createTime  from t_notice where rose = 0 and state =1
	</select>
	
	<select id="statisticAllNotice1" resultType="com.ssm.gbq.model.vo.NoticeDto">
		select notice,DATE_FORMAT(createTime,'%Y-%m-%d')as createTime from t_notice where rose = 1 and state =1
	</select>
	<select id="statisticAllNotice2" resultType="com.ssm.gbq.model.vo.NoticeDto">
		select notice,DATE_FORMAT(createTime,'%Y-%m-%d')as createTime from t_notice where rose = 2 and state =1
	</select>
	
	<update id="arrNotice">
	 update t_notice
    <set>
      <if test="state == 1">
        state = #{state,jdbcType=SMALLINT},
      </if>
       <if test="state == 0">
        state = #{state,jdbcType=SMALLINT},
      </if>
    </set>
    where id in
    <foreach collection="ids" item="item" open="(" close=")" separator=",">#{item}</foreach>
	</update>
</mapper>