<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.gbq.mapper.ManagerMapper">
  <resultMap id="BaseResultMap" type="com.ssm.gbq.model.Manager">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="headPic" jdbcType="VARCHAR" property="headPic" />
    <association  column="id" property="roleName" select="selectRoleById" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, password,name,headPic,phone
  </sql>
  <select id="selectByExample" parameterType="com.ssm.gbq.model.ManagerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />,
    (SELECT teacherId from t_course where teacherId in((SELECT teacherId from t_manager_teacher WHERE managerId = #{id,jdbcType=INTEGER}))) as teacherId,
    (SELECT subjectId from t_teacher where id in (SELECT teacherId from t_manager_teacher WHERE managerId = #{id,jdbcType=INTEGER})) as subjectId
    from t_manager
    where id = #{id,jdbcType=INTEGER}
  </select>
   <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    	delete from t_manager
    	where id in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
  <delete id="deleteByExample" parameterType="com.ssm.gbq.model.ManagerExample">
    delete from t_manager
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.gbq.model.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager (username, password, headPic,name,phone
      )
    values (#{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{headPic,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
      , #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.gbq.model.Manager">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="username != null">
        username,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="headPic != null">
        headPic,
      </if>
      <if test="phone != null">
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="headPic != null">
        #{headPic,jdbcType=VARCHAR},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample"  resultType="int">
    select count(*) from t_manager
    <if test="_parameter != null">
      <include refid="Query_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_manager
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.headPic != null">
        headPic = #{record.headPic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_manager
    set id = #{record.id,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      headPic = #{record.headPic,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.gbq.model.Manager">
    update t_manager
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
        headPic = #{headPic,jdbcType=VARCHAR},
      <if test="phone != null">
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.gbq.model.Manager">
    update t_manager
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      headPic = #{headPic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="countByManager" resultType="com.ssm.gbq.model.vo.StatisticDto">
    select DISTINCT
  (select count(*) from t_manager_role  where roleId = 1  )as superAdminCount,
  (select count(*) from t_manager_role  where roleId = 2  )as teacherCount,
  (select count(*) from t_manager_role  where roleId = 3  )as studentCount
  
   from t_manager_role
  </select>
  
  
  <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from t_manager
        <if test="_parameter != null">
            <include refid="Query_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null and example.orderByClause != ''">
             order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
  </select>
    <sql id="Query_By_Example_Where_Clause" >
       <trim prefix="WHERE"  prefixOverrides="AND|OR" >
            <if test="example.name != null and example.name != ''">
             or name like CONCAT('%',CONCAT('${example.name}','%'))
            </if>
            and id != 1
       </trim>
  </sql>
  
  <select id="selectRoleById" parameterType="java.lang.Integer" resultType="String">
  	select name from t_role where id in (select roleId from t_manager_role where managerId = #{id})
  </select>
  
  <insert id="addManagerToStudent" >
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager_student (managerId, studentId) values (#{managerId}, #{studentId})
  </insert>
  
   <insert id="addManagerToTeacher" >
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_manager_teacher (managerId, teacherId) values (#{managerId}, #{teacherId})
  </insert>
  
  <select id="searchByTeacherId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
 	 SELECT managerId from t_manager_teacher where teacherId in
 	 <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </select>
  
   <select id="searchByStudentId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
 	 SELECT managerId from t_manager_student where studentId in
 	 <foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
  </select>
  
   <delete id="delRoleByManagerId" parameterType="java.lang.Integer">
    	delete from t_manager_role
    	where managerId in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
   
   <delete id="delManagerToStudent" parameterType="java.lang.Integer">
    	delete from t_manager_student
    	where studentId in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
    
    <delete id="delManagerToTeacher" parameterType="java.lang.Integer">
    	delete from t_manager_teacher
    	where teacherId in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
    
    <select id="getManagerName"  resultType="com.ssm.gbq.model.vo.NameDto">
    	select id ,name from t_manager where name like CONCAT('%',CONCAT('${name}','%'))
    </select>
    
     <select id="getManagerByTeacherId"  parameterType="java.lang.Integer" resultType="com.ssm.gbq.model.Manager">
    	select <include refid="Base_Column_List" />  from t_manager where 
    	id in (select managerId from t_manager_teacher where teacherId = #{id})
    </select>
    
    <select id="getManagerByStudentId"  parameterType="java.lang.Integer" resultType="com.ssm.gbq.model.Manager">
    	select <include refid="Base_Column_List" />  from t_manager where 
    	id in (select managerId from t_manager_student where studentId = #{id})
    </select>
</mapper>