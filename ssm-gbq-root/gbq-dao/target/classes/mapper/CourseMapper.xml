<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssm.gbq.mapper.CourseMapper">
  <resultMap id="BaseResultMap" type="com.ssm.gbq.model.Course">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="className" jdbcType="VARCHAR" property="className" />
    <result column="cname" jdbcType="VARCHAR" property="cname" />
    <result column="studentId" jdbcType="INTEGER" property="studentId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="teacherId" jdbcType="INTEGER" property="teacherId" />
     <association  column="id" property="teachers" select="selectArrTeacherById" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, className, cname, studentId, remark, teacherId
  </sql>
  <select id="selectByExample" parameterType="com.ssm.gbq.model.CourseExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_course
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    	delete from t_course
    	where id in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
  <delete id="deleteByExample" parameterType="com.ssm.gbq.model.CourseExample">
    delete from t_course
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ssm.gbq.model.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_course (className, cname, studentId, 
      remark, teacherId)
    values (#{className,jdbcType=VARCHAR}, #{cname,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, 
      #{remark,jdbcType=VARCHAR}, #{teacherId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ssm.gbq.model.Course">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_course
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="className != null">
        className,
      </if>
      <if test="cname != null">
        cname,
      </if>
      <if test="studentId != null">
        studentId,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="teacherId != null">
        teacherId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        #{cname,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        #{teacherId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
   <select id="countByExample"  resultType="int">
    select count(*) from t_course
    <if test="_parameter != null">
      <include refid="Query_By_Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_course
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.className != null">
        className = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.cname != null">
        cname = #{record.cname,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        studentId = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.teacherId != null">
        teacherId = #{record.teacherId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_course
    set id = #{record.id,jdbcType=INTEGER},
      className = #{record.className,jdbcType=VARCHAR},
      cname = #{record.cname,jdbcType=VARCHAR},
      studentId = #{record.studentId,jdbcType=INTEGER},
      remark = #{record.remark,jdbcType=VARCHAR},
      teacherId = #{record.teacherId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ssm.gbq.model.Course">
    update t_course
    <set>
      <if test="className != null">
        className = #{className,jdbcType=VARCHAR},
      </if>
      <if test="cname != null">
        cname = #{cname,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        studentId = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teacherId != null">
        teacherId = #{teacherId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ssm.gbq.model.Course">
    update t_course
    set className = #{className,jdbcType=VARCHAR},
      cname = #{cname,jdbcType=VARCHAR},
      studentId = #{studentId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR},
      teacherId = #{teacherId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
 <select id="selectCourseByTeacherId" parameterType="java.lang.Integer" resultType="com.ssm.gbq.model.Course">
  	select 
  	 <include refid="Base_Column_List" />
  	from t_course where id in (select courseId from t_teacher_course where teacherId = #{teacherId})
  </select> 
  
   <select id="selectByLimitPage" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" />,
        (select name from t_teacher where id = t_course.teacherId) as teacherName,
        (select name from t_student where id = t_course.studentId) as studentName
         from t_course
        <if test="_parameter != null">
            <include refid="Query_By_Example_Where_Clause" />
        </if>
        <if test="example.orderByClause != null and example.orderByClause != ''">
             order by ${example.orderByClause}
        </if>
        limit #{offset},#{limit}
  </select>
    <sql id="Query_By_Example_Where_Clause" >
       <trim prefix="WHERE"  prefixOverrides="AND|OR" >
            <if test="example.name != null and example.name != ''">
             or (name like CONCAT('%',CONCAT('${example.name}','%'))
            </if>
            <if test="example.name != null and example.name != ''">
             or cname like CONCAT('%',CONCAT('${example.name}','%')))
            </if>
       </trim>
  </sql>
  <select id="selectArrTeacherById" parameterType="java.lang.Integer" resultType="com.ssm.gbq.model.Teacher">
  	select * from t_teacher where id in (select teacherId from t_teacher_course where courseId = #{id})
  </select>
  
  <select id="countToTeacher" resultType="int">
  	select count(*) from t_teacher_course where courseId = #{courseId}
  </select>
  
  <select id="selectToTeacherPage" resultType="com.ssm.gbq.model.Teacher">
  	select * from t_teacher where id in (select teacherId from t_teacher_course where courseId = #{courseId})
  </select>
  
  <select id="countStudent" resultType="int">
  	select count(*) from t_student where courseId = #{courseId}
  </select>
  
  <select id="selectToStudentPage" resultType="com.ssm.gbq.model.Student">
  	select *,
  	(SELECT sum(t_student_custom.customNum)/count(t_student_custom.id) from t_student_custom where t_student_custom.studentId = t_student.id) as customNumPj
  	 from t_student where courseId =#{courseId} order by customNumPj desc
  </select>
  
   <insert id="courseToTeacher">
    insert into t_teacher_course(courseId,teacherId)
    values 
    <foreach collection="teacherIds" index="index" item="item" separator=",">
		(#{courseId},#{item})
	</foreach>
  </insert>
  
  <delete id="delCourseToTeacher" parameterType="java.lang.Integer">
    	delete from t_teacher_course
    	where courseId in
    	<foreach collection="list" item="item" open="(" close=")" separator=",">#{item}</foreach>
    </delete>
</mapper>